# read the data
# ask for user input (what instrument, what econ indicator, direction of surprise, magnitude of surprise)
# clean data: positive, no surprise or negative + calculate magnitude + adjust for time diff?
# go into data, find econ indicator
# filter data: according to request
# output: find date

import pandas as pd
df = pd.read_csv('/Users/Valeriey/Desktop/DummyData.csv')


class user_input:
    def __init__(self, instrument, indicator, surprise_sign_input, surprise_magnitude):
        self.instrument = instrument  # to link to drop down
        self.indicator = indicator  # to link to autofill
        self.surprise_sign_input = surprise_sign_input  # to link to drop down (exceed, meet, below expections)
        self.surprise_magnitude = surprise_magnitude  # to link to drop down (large, medium, small)
john=user_input("Apple","ISM Maunfacturing","Exceed","Small")

def surprise_sign_calc(row):
  if row['Actual']-row['Median Est']>0:
      return('Exceed')
  elif row['Actual']-row['Median Est']<0:
      return('Below')
  else:
      return('Meet')

df['surprise_sign']=df.apply(surprise_sign_calc, axis=1)

def surprise_magnitude_calc(row):
  if abs((row['Actual']-row['Median Est'])/row['SD'])>2:
      return('Large')
  elif abs((row['Actual']-row['Median Est'])/row['SD'])<1:
      return('Small')
  else:
      return('Medium')

df['surprise_magnitude']=df.apply(surprise_magnitude_calc, axis=1)

df_results=df[df['Event'].str.contains(john.indicator)& df['surprise_sign'].str.contains(john.surprise_sign_input)&
              df['surprise_magnitude'].str.contains(john.surprise_magnitude)]

print(df_results['Date'])
    
